// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl
/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    Or16(a=false, b[0..14]=address, out[0..13]=ramAdr);
    Or16(a=false, b[0..14]=address, out[0..12]=screenAdress);

    And(a=address[13], b=address[14], out=keyboard);

    Not(in=keyboard, out=notKeyboard);
    And(a=address[14], b=notKeyboard, out=screen);

    Not(in=screen, out=notScreen);

    And(a=notScreen, b=notKeyboard, out=loadRam1);
    And(a=loadRam1, b=load, out=loadRam);

	RAM16K(in=in, load=loadRam, address=ramAdr, out=memoryOut);


    And(a=screen, b=load, out=loadScreen1);
    Not(in=loadRam, out=notLoadRam);
    And(a=loadScreen1, b=notLoadRam, out=loadScreen);

    Screen(in=in, load=loadScreen, address=screenAdress, out=screenOut);
    Keyboard(out=keyBoardOut);

    //00 - MEMORY
    //01 - Screen
    //10 - KEYBOARD

    Mux4Way16(a=memoryOut, b=screenOut, c=keyBoardOut, sel[0]=screen, sel[1]=keyboard, out=out);
}